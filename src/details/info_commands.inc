#ifndef DEFINE_COMMAND
#error "This file is intended for textual inclusion with the DEFINE_COMMAND macro defined"
#endif

DEFINE_COMMAND(address, "Describe where symbol SYM is stored.", handle_info_address, 101),
DEFINE_COMMAND(all-registers, "List of all registers and their contents, for selected stack frame.", handle_info_all_registers, 102),
DEFINE_COMMAND(args, "All argument variables of current stack frame or those matching REGEXPs.", handle_info_args, 103),
DEFINE_COMMAND(auto-load, "Print current status of auto-loaded files.", handle_info_auto_load, 104),
DEFINE_COMMAND(auxv, "Display the inferior's auxiliary vector.", handle_info_auxv, 105),
DEFINE_COMMAND(bookmarks, "Status of user-settable bookmarks.", NULL, 106),
DEFINE_COMMAND(breakpoints, "Status of specified breakpoints (all user-settable breakpoints if no argument).", NULL, 107),
DEFINE_COMMAND(checkpoints, "IDs of currently known checkpoints.", NULL, 108),
DEFINE_COMMAND(classes, "All Objective-C classes, or those matching REGEXP.", NULL, 109),
DEFINE_COMMAND(common, "Print out the values contained in a Fortran COMMON block.", NULL, 110),
DEFINE_COMMAND(connections, "Target connections in use.", NULL, 111),
DEFINE_COMMAND(copying, "Conditions for redistributing copies of Sylvan.", NULL, 112),
DEFINE_COMMAND(dcache, "Print information on the dcache performance.", NULL, 113),
DEFINE_COMMAND(display, "Expressions to display when program stops, with code numbers.", NULL, 114),
DEFINE_COMMAND(exceptions, "List all Ada exception names.", NULL, 115),
DEFINE_COMMAND(extensions, "All filename extensions associated with a source language.", NULL, 116),
DEFINE_COMMAND(files, "Names of targets and files being debugged.", NULL, 117),
DEFINE_COMMAND(float, "Print the status of the floating point unit.", NULL, 118),
DEFINE_COMMAND(frame, "All about the selected stack frame.", NULL, 119),
DEFINE_COMMAND(frame-filter, "List all registered Python frame-filters.", NULL, 120),
DEFINE_COMMAND(functions, "All function names or those matching REGEXPs.", NULL, 121),
DEFINE_COMMAND(guile, "Prefix command for Guile info displays.", NULL, 122),
DEFINE_COMMAND(inferiors, "Print a list of inferiors being managed.", NULL, 123),
DEFINE_COMMAND(line, "Core addresses of the code for a source line.", NULL, 124),
DEFINE_COMMAND(locals, "All local variables of current stack frame or those matching REGEXPs.", NULL, 125),
DEFINE_COMMAND(macro, "Show the definition of MACRO, and its source location.", NULL, 126),
DEFINE_COMMAND(macros, "Show the definitions of all macros at LINESPEC, or the current source location.", NULL, 127),
DEFINE_COMMAND(main, "Get main symbol to identify entry point into program.", NULL, 128),
DEFINE_COMMAND(mem, "Memory region attributes.", NULL, 129),
DEFINE_COMMAND(missing-debug-handlers, "Sylvan command to list missing debug handlers.", NULL, 130),
DEFINE_COMMAND(missing-objfile-handlers, "Sylvan command to list missing objfile handlers.", NULL, 131),
DEFINE_COMMAND(module, "Print information about modules.", NULL, 132),
DEFINE_COMMAND(modules, "All module names, or those matching REGEXP.", NULL, 133),
DEFINE_COMMAND(os, "Show OS data ARG.", NULL, 134),
DEFINE_COMMAND(pretty-printer, "Sylvan command to list all registered pretty-printers.", NULL, 135),
DEFINE_COMMAND(probes, "Show available static probes.", NULL, 136),
DEFINE_COMMAND(proc, "Show additional information about a process.", NULL, 137),
DEFINE_COMMAND(program, "Execution status of the program.", NULL, 138),
DEFINE_COMMAND(record, "Info record options.", NULL, 139),
DEFINE_COMMAND(registers, "List of integer registers and their contents, for selected stack frame.", NULL, 140),
DEFINE_COMMAND(rpm-suggestions, "Relist any RPM installation suggestions that have been made.", NULL, 141),
DEFINE_COMMAND(scope, "List the variables local to a scope.", NULL, 142),
DEFINE_COMMAND(selectors, "All Objective-C selectors, or those matching REGEXP.", NULL, 143),
DEFINE_COMMAND(sharedlibrary, "Status of loaded shared object libraries.", NULL, 144),
DEFINE_COMMAND(signals, "What debugger does when program gets various signals.", NULL, 145),
DEFINE_COMMAND(skip, "Display the status of skips.", NULL, 146),
DEFINE_COMMAND(source, "Information about the current source file.", NULL, 147),
DEFINE_COMMAND(sources, "All source files in the program or those matching REGEXP.", NULL, 148),
DEFINE_COMMAND(stack, "Backtrace of the stack, or innermost COUNT frames.", NULL, 149),
DEFINE_COMMAND(static-tracepoint-markers, "List target static tracepoints markers.", NULL, 150),
DEFINE_COMMAND(symbol, "Describe what symbol is at location ADDR.", NULL, 151),
DEFINE_COMMAND(target, "Names of targets and files being debugged.", NULL, 152),
DEFINE_COMMAND(tasks, "Provide information about all known Ada tasks.", NULL, 153),
DEFINE_COMMAND(terminal, "Print inferior's saved terminal status.", NULL, 154),
DEFINE_COMMAND(threads, "Display currently known threads.", NULL, 155),
DEFINE_COMMAND(tracepoints, "Status of specified tracepoints (all tracepoints if no argument).", NULL, 156),
DEFINE_COMMAND(tvariables, "Status of trace state variables and their values.", NULL, 157),
DEFINE_COMMAND(type-printers, "Sylvan command to list all registered type-printers.", NULL, 158),
DEFINE_COMMAND(types, "All type names, or those matching REGEXP.", NULL, 159),
DEFINE_COMMAND(unwinder, "Sylvan command to list unwinders.", NULL, 160),
DEFINE_COMMAND(variables, "All global and static variable names or those matching REGEXPs.", NULL, 161),
DEFINE_COMMAND(vector, "Print the status of the vector unit.", NULL, 162),
DEFINE_COMMAND(vtbl, "Show the virtual function table for a C++ object.", NULL, 163),
DEFINE_COMMAND(warranty, "Various kinds of warranty you do not have.", NULL, 164),
DEFINE_COMMAND(watchpoints, "Status of specified watchpoints (all watchpoints if no argument).", NULL, 165),
DEFINE_COMMAND(win, "List of all displayed windows.", NULL, 166),
DEFINE_COMMAND(xmethod, "Sylvan command to list registered xmethod matchers.", NULL, 167),